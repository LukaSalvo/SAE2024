@startuml
actor User
participant Main
participant Labyrinthe
participant Monstre
participant Random
title : Deplacement des monstre
User -> Main: update()
activate Main
Main -> Labyrinthe: deplacerMonstre()
activate Labyrinthe
Labyrinthe -> Monstre: getPosition()
activate Monstre
Monstre -> Monstre: choisirDirectionAleatoire()
activate Monstre
deactivate Monstre
Monstre -> Random: randomDirection()
activate Random
Random --> Monstre: return direction
deactivate Random
Monstre -> Labyrinthe: getSuivant(x, y, direction)
activate Labyrinthe
Labyrinthe --> Monstre : int []
deactivate Labyrinthe
Monstre -> Labyrinthe: getMur(nouvellePosition)
activate Labyrinthe
Labyrinthe --> Monstre : boolean
deactivate Labyrinthe
alt Si nouvellePosition n'est pas un mur
    Monstre -> Monstre: setPosition(nouvellePosition)
end
Monstre --> Labyrinthe : void
deactivate Monstre
Labyrinthe --> Main : void
deactivate Labyrinthe
deactivate Main
note across
Lorsqu'un monstre veut se déplacer on recupere ça position on verifie que la prochaine position n'est pas un mur
si c'est le cas il bouge
end note
@enduml